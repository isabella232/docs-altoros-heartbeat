---
title: StatsD Integration
owner: Partners
---

## <a id='about'></a> About StatsD Integration

This section is intended for app developers who are going to use the Altoros Heartbeat service to collect custom metrics from their apps.
The section describes how to enable an app to send metrics to the StatsD server.
These metrics are subsequently pushed to Graphite's Carbon component for caching and persistence.


## <a id='integration'></a> Integrate Heartbeat's StatsD Into the App

1. Download a language-specific StatsD client library from [this Github page](https://github.com/etsy/statsd/wiki#client-implementations) and add it into your app code.

1. Follow the steps in [Binding a Service Instance to the App](./jmxtrans.html#binding) to bind the Heartbeat service to your app.

1. Parse environment variables in the code to get a StatsD endpoint.
      a. Parse environment variables of your app.
      b. Find the service called Heartbeat and retrieve the variables highlighted below:
      ```
    System-Provided:
    {
     "VCAP_SERVICES": {
      "heartbeat": [
       {
        "credentials": {
         "host": "192.168.222.59", <--
         "jmxtrans_prefix": "jmxtrans.admin.demo.",
         "port": 8125, <--
         "statsd_prefix": "apps.admin.demo." <--
        },
        "label": "heartbeat",
        "name": "heartbeat",
      ```

1. Prepare a metrics prefix in the following format `statsd_prefix` + `app_name` + `.` + `app_index`, where:
      * `statsd_prefix`: statsd_prefix is described in the previous step.
      * `app_name`: For information about the app name, see [this documentation](http://docs.cloudfoundry.org/devguide/deploy-apps/environment-variable.html#VCAP-APPLICATION).
      * `app_index`: For information about the app index, see [this documentation](http://docs.cloudfoundry.org/devguide/deploy-apps/environment-variable.html#CF-INSTANCE-INDEX).
      For an example, see [this GitHub repository](https://github.com/Altoros/tweets-fetcher/blob/23e1fe7a3c2fbccaca1e0ca1dc09590e8f285c88/main.go#L130).

1. Configure the StatsD client library (e.g. set host, port, prefix). For an example, see [this GitHub repository](https://github.com/Altoros/tweets-fetcher/blob/23e1fe7a3c2fbccaca1e0ca1dc09590e8f285c88/main.go#L125-L132).

1. Define custom metrics inside the app code (using the StatsD library).
   For an example, see [this GitHub repository]
(https://github.com/Altoros/tweets-fetcher/blob/5018d3753dc67c38bb6d89c9fbe6d84cb547b43b/fetcher/fetcher.go#L103).

1. Push the app to Pivotal Platform.

1. Create a custom dashboard in Grafana.
   For a sample dashboard, see [this GitHub repository](https://github.com/Altoros/tweets-fetcher/tree/master/grafana-dashboard).

For an example of an app written in golang that sends custom metrics to a Grafana dashboard, see [this GitHub repository](https://github.com/Altoros/tweets-fetcher/).

                                                 
## <a id='example'></a> Example of an App with StatsD Integration

1. Navigate to cf marketplace.
      <pre class="terminal">cf marketplace
        Getting services from marketplace in org admin / space demo as admin...
    OK
    service              plans                               description
    app-autoscaler       standard                            Scales bound applications in response to load (beta)</pre>

1. Find Heartbeat in the list of the available services and select the service plan. Currently, only the standard service plan is available, so it is selected by default.

1. Create a service instance.
      <pre class="terminal">cf create-service heartbeat standard heartbeat</pre>

1. Bind the service to your app.
      <pre class="terminal">cf bind-service app_name heartbeat</pre>

1. Restage the app to start the metrics flow.
      <pre class="terminal">cf restage app_name</pre>


## <a id='create'></a> Create a Custom Dashboard

For information about creating and editing Grafana graphs and panels, see [Grafana documentation](http://docs.grafana.org/guides/getting_started/).
For an example of an app's dashboard, see [this Github repository](https://github.com/Altoros/tweets-fetcher/tree/master/grafana-dashboard).
